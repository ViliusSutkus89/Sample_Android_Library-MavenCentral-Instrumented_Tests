#  MIT License
#
#  Copyright (c) 2021 Vilius Sutkus <ViliusSutkus89@gmail.com>
#
#  https://github.com/ViliusSutkus89/Sample_Android_Library-MavenCentral-Instrumented_Tests
#  .github/workflows/privilegedBuild.yml - v1.1.5
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in all
#  copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#  SOFTWARE.

name: privilegedBuild
on:
  workflow_dispatch:
  push:
    branches: [ master, main ]
    paths-ignore:
      - '**.md'
      - '.github/workflows/manualVersionIncrement*.yml'
      - '.github/workflows/unprivilegedBuild.yml'

permissions:
  actions: none
  checks: none
  contents: none
  deployments: none
  issues: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

jobs:
  buildLibrary:
    environment: LibraryKeyAndSonatypeAccess
    outputs:
      STAGING_REPO_URL: ${{ steps.sonatype.outputs.stagingRepoUrl }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 8
      - uses: android-actions/setup-android@v2

      - run: ./gradlew build

      - name: 'Publish to Sonatype'
        run: ./gradlew publishToSonatype closeSonatypeStagingRepository | tee publishToSonatype.log
        # bash has pipefail on by default, which is needed for tee to fail, if gradle fails
        shell: bash
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASS: ${{ secrets.SIGNING_PASS }}

      - name: 'Parse Sonatype repository'
        id: sonatype
        # publishToSonatype.log contains a line looking like this:
        # Created staging repository 'comviliussutkus89-1055' at https://oss.sonatype.org/service/local/repositories/comviliussutkus89-1055/content/
        run: perl -ne 'print "::set-output name=stagingRepoUrl::$2\n::warning ::$1\n" if /^(Created staging repository .+ at (.+))$/' < publishToSonatype.log

      - run: ./gradlew publishToMavenLocal
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASS: ${{ secrets.SIGNING_PASS }}

      - run: tar -cvf maven-local.tar ~/.m2
      - uses: actions/upload-artifact@v2
        with:
          name: maven-local.tar
          path: maven-local.tar

      - run: mv lib/build/reports/lint-results.html lib/build/reports/library-lint-results.html
      - uses: actions/upload-artifact@v2
        with:
          name: library-lint-results.html
          path: lib/build/reports/library-lint-results.html

  buildSampleAppStaging:
    needs: buildLibrary
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 8
      - uses: android-actions/setup-android@v2

      - name: Prepare sample app for staging repository
        run: ./ci-scripts/prepareSampleAppForStagingRepository sampleapp app --output=build/sampleapp-staging --repository=${{ needs.build.outputs.STAGING_REPO_URL }}

      - name: Build sample app from staging library
        run: ./gradlew build
        working-directory: build/sampleapp-staging

      - uses: actions/upload-artifact@v2
        with:
          name: sampleapp-staging-apks
          path: build/sampleapp-staging/app/build/outputs/apk/**/*.apk

      - uses: actions/upload-artifact@v2
        with:
          name: sampleapp-staging-lint-report.html
          path: build/sampleapp-staging/app/build/reports/lint-results.html

  runInstrumentedTests:
    needs: buildLibrary
    # Only macos VMs are available with exposed CPU extensions to run hardware accelerated emulator
    runs-on: macos-10.15
    strategy:
      fail-fast: false
      matrix:
        include:
          # Oldest API supported by NDK
          - arch: x86
            api-level: 16
            api-type-target: default
          # Oldest x86_64 image
          - arch: x86_64
            api-level: 21
            api-type-target: default
          # Latest x86 image
          - arch: x86
            api-level: 30
            api-type-target: google_apis
          # Latest image
          - arch: x86_64
            api-level: 31
            api-type-target: google_apis
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 8
      - uses: android-actions/setup-android@v2

      - run: ./ci-scripts/prepareLibraryTestsForStagingRepository lib --output=build/lib-staging --repository=${{ needs.buildLibrary.outputs.STAGING_REPO_URL }}

      - uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          target: ${{ matrix.api-type-target }}
          script: ./gradlew connectedCheck
          working-directory: build/lib-staging

      - run: tar -cvf instrumentedTestsReport-${{ matrix.api-level }}-${{ matrix.arch }}.tar build/lib-staging/lib/build/reports/androidTests/connected
      - uses: actions/upload-artifact@v2
        with:
          name: instrumentedTestsReport-${{ matrix.api-level }}-${{ matrix.arch }}.tar
          path: instrumentedTestsReport-${{ matrix.api-level }}-${{ matrix.arch }}.tar

  releaseSonatype:
    environment: SonatypeAccess
    # Needs to depend on buildLibrary too, to obtain STAGING_REPO_URL
    needs: [runInstrumentedTests, buildLibrary]
    runs-on: ubuntu-20.04
    outputs:
      ARTIFACTS: ${{ steps.promote.outputs.artifacts }}
    steps:
      - uses: ViliusSutkus89/promote-Nexus-repository-to-MavenCentral@v1
        id: promote
        with:
          repositoryURL: ${{ needs.buildLibrary.outputs.STAGING_REPO_URL }}
          sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}

  releaseGitHub:
    environment: TenMinuteWait
    needs: releaseSonatype
    permissions:
      # Permission needed to create GitHub release and version increment commit.
      contents: write
    outputs:
      RELEASE_TAG: "v${{ steps.preReleaseVersionUpdate.outputs.releasedVersion }}"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          # A branch is required for post release version increment commit
          ref: ${{ github.event.ref }}

      - uses: ViliusSutkus89/WaitForURLsToBeAvailable@v1
        with:
          URLs: ${{ needs.releaseSonatype.outputs.ARTIFACTS }}

      - run: ./ci-scripts/incrementVersion --release
        id: preReleaseVersionUpdate

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Pre release sample app version update to ${{ steps.preReleaseVersionUpdate.outputs.releasedVersion }}"
          file_pattern: ${{ steps.preReleaseVersionUpdate.outputs.files }}

      - uses: actions/download-artifacts@v2
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "v${{ steps.preReleaseVersionUpdate.outputs.releasedVersion }}"
          name: "${{ github.event.repository.name }} v${{ steps.preReleaseVersionUpdate.outputs.releasedVersion }}"
          artifacts: "artifacts/maven-local.tar,artifacts/library-lint-results.html,artifacts/instrumentedTestsReport-*-*.tar"
          bodyFile: "UpcomingReleaseNotes.md"

      - run: ./ci-scripts/incrementVersion --patch
        id: postReleaseVersionIncrement

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Post release library version increment to ${{ steps.postReleaseVersionIncrement.outputs.unreleasedVersion }} (from ${{ steps.postReleaseVersionIncrement.outputs.releasedVersion }})"
          file_pattern: ${{ steps.postReleaseVersionIncrement.outputs.files }}

      - run: echo -n > UpcomingReleaseNotes.md
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Post release truncation of UpcomingReleaseNotes.md"
          file_pattern: UpcomingReleaseNotes.md

  buildSampleApp:
    environment: SampleAppKeystore
    needs: releaseGitHub
    permissions:
      # Permission needed to attach artifact to GitHub release.
      contents: write
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          # A branch is required for post release version increment commit
          ref: refs/tags/${{ needs.releaseGitHub.outputs.RELEASE_TAG }}
      - uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 8
      - uses: android-actions/setup-android@v2

      - id: decodeSampleAppKeystore
        run: |
          echo "${{ env.APP_SIGNING_KEYFILE_BASE64 }}" | base64 --decode - > "$HOME/com.viliussutkus89.samplelib.sampleapp.jks"
          echo "::set-output name=APP_SIGNING_KEYFILE::$HOME/com.viliussutkus89.samplelib.sampleapp.jks"
        env:
          APP_SIGNING_KEYFILE_BASE64: ${{ secrets.APP_SIGNING_KEYFILE_BASE64 }}

      - run: ./gradlew build
        working-directory: sampleapp
        env:
          APP_SIGNING_KEYFILE: ${{ steps.decodeSampleAppKeystore.outputs.APP_SIGNING_KEYFILE }}
          APP_SIGNING_PASS: ${{ secrets.APP_SIGNING_PASS }}
          APP_SIGNING_ALIAS: ${{ secrets.APP_SIGNING_ALIAS }}

      - run: mv sampleapp/app/build/reports/lint-results.html sampleapp-lint-results.html

      - name: Attach sample application to GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ needs.releaseGitHub.outputs.RELEASE_TAG }}
          allowUpdates: true
          artifacts: "sampleapp/app/build/outputs/apk/release/*.apk,sampleapp-lint-results.html"
